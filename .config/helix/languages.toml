[[language]]
name = "rust"
auto-format = true

[language.config]
procMacro.enable = true
# I have beefy machines, let's use them
lruCapacity = 256
# A little slower than a simple check, but so useful
checkOnSave.command = "clippy"
# Putting the target dir for RA inside target/ means it is automatically cleaned up
# by 'cargo clean' and hidden when there is a .gitignore or some global ignore for
# a Rust config
checkOnSave.extraArgs = ["--target-dir", "target/target-rust-analyzer"]
# checkOnSave.target = "x86_64-pc-windows-msvc"
# cargo.target = "x86_64-pc-windows-msvc"
hoverActions.references = true
lens.methodReferences = true
lens.references = true
lens.enumVariantReferences = true
workspace.symbol.search.kind = "all_symbols"

# https://rust-analyzer.github.io/manual.html#user-snippet-completions
# [language.config.completion.snippets."test function"]
# prefix = ["tfn"]
# body = ["#[test]", "fn test_$1() {", "    $2", "}"]
# description = "Insert a new test function"
# scope = "item"

# [language.config.completion.snippets."test module"]
# prefix = ["tmod"]
# body = ["#[cfg(test)]", "mod tests {", "    use super::*", "",         "    #[test]", "    fn test_$1() {", "        $2", "    }", "}"]
# description = "Insert a new test module"
# scope = "item"



[[language]]
name = "toml"
indent = { tab-width = 4, unit = "    " }



[[language]]
name = "protobuf"
indent = { tab-width = 4, unit = "    " }



[[language]]
name = "bash"
indent = { tab-width = 4, unit = "    " }